Algorithm
https://leetcode-cn.com/problems/longest-univalue-path/
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int longestUnivaluePath(TreeNode* root) {
        if(root == nullptr) return this->length;
        this->length++; 
        longestPathLength(root->left);
        longestPathLength(root->right);
        return this->length;
    }

    void longestPathLength(TreeNode *node){
        if(node->left == nullptr && node->right == nullptr) return;
        if(node->left->val == node->val){
            this->length++;
            longestPathLength(node->left);
            longestPathLength(node->right);
        }else {
            this->length++;
            longestPathLength(node->left);
            longestPathLength(node->right);
        }
    }
private:
    int length = 0;
};

Review

Tip

Share
