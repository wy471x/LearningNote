Algorithm:
https://leetcode-cn.com/problems/roman-to-integer/
思路 ：
本题有以下四种情形：
以I和V开头为个位、以X和L开头为十位、以C和D开头为百位、以M开头为千位
将所有数字存入map中，对字符串进行匹配然后进行组合计算得出结果
class Solution {
public:
    int romanToInt(string s) {
        map<string,int> ism = {{"I",1},{"II",2},{"III",3},{"IV",4},{"V",5},
                               {"VI",6},{"VII",7},{"VIII",8},{"IX",9},
                               {"X",10},{"XX",20},{"XXX",30},{"XL",40},{"L",50},
                               {"LX",60},{"LXX",70},{"LXXX",80},{"XC",90},
                               {"C",100},{"CC",200},{"CCC",300},{"CD",400},{"D",500},
                               {"DC",600},{"DCC",700},{"DCCC",800},{"CM",900},
                               {"M",1000},{"MM",2000},{"MMM",3000}
                             };
        string thousandsPlace;
        string hundredsPlace;
        string tensPlace;
        string unitsPlace;
        for(int i = 0; i < s.size();){
            while( s[i] == 'I' || s[i]  == 'V'){
                unitsPlace += s[i];
                i++;
            }
            while( s[i] == 'X' || s[i] == 'L'){
                tensPlace += s[i];
                i++;
            }
            while( s[i] == 'C' || s[i] == 'D'){
                hundredsPlace += s[i];
                i++;
            }
            while( s[i] == 'M'){
                 thousandsPlace += s[i];
                 i++;
            }
        }

    }
};

Review:

Tip:

Share:
