Algorithm
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* sortList(ListNode* head) {
        if( head == nullptr || head->next == nullptr)
            return head;
        ListNode *fast = head;
        ListNode *slow = head;
        while( fast->next != nullptr && fast->next->next != nullptr ){
            fast = fast->next->next;
            slow = slow->next;
        }
        
    }


};

Review

Tip

Share
