Algorithm
https://leetcode-cn.com/problems/sort-list/submissions/
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* sortList(ListNode* head) {
        if( head == nullptr || head->next == nullptr)
            return head;
        // cut 
        ListNode *fast = head->next;
        ListNode *slow = head;
        while( fast != nullptr && fast->next != nullptr ){
            fast = fast->next->next;
            slow = slow->next;
        }
        ListNode *tmp = slow->next;
        slow->next = nullptr;
        ListNode *left = sortList(head);
        ListNode *right = sortList(tmp);
        ListNode *h = new ListNode(0);
        // merge
        ListNode *t = h;
        while(left != nullptr && right != nullptr){
            if( left->val > right->val ){
                t->next = right;
                right = right->next;
                t = t->next;
            }else{
                t->next = left;
                left = left->next;
                t = t->next;
            }
        }
        t->next = left != nullptr ? left : right;
        return h->next;
    }
};

Review

Tip

Share
